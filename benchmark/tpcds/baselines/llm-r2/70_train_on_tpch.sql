SELECT t6.total_sum, t6.s_state, t6.s_county, t6.f3 + t6.f4 AS lochierarchy, RANK() OVER (PARTITION BY t6.f3 + t6.f4, CASE WHEN t6.f4 = 0 THEN t6.s_state ELSE NULL END ORDER BY t6.total_sum DESC) AS rank_within_parent FROM (SELECT store.s_state, store.s_county, SUM(store_sales.ss_net_profit) AS total_sum, GROUPING(store.s_state) AS f3, GROUPING(store.s_county) AS f4 FROM store_sales INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1220 AND d_month_seq <= 1220 + 11) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN store ON store_sales.ss_store_sk = store.s_store_sk INNER JOIN (SELECT s_state FROM (SELECT store0.s_state, RANK() OVER (PARTITION BY store0.s_state ORDER BY SUM(store_sales0.ss_net_profit) DESC) AS ranking FROM store_sales AS store_sales0 INNER JOIN store AS store0 ON store_sales0.ss_store_sk = store0.s_store_sk INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1220 AND d_month_seq <= 1220 + 11) AS t0 ON store_sales0.ss_sold_date_sk = t0.d_date_sk GROUP BY store0.s_state) AS t2 WHERE t2.ranking <= 5) AS t4 ON store.s_state = t4.s_state GROUP BY ROLLUP(store.s_county, store.s_state)) AS t6 ORDER BY t6.f3 + t6.f4 DESC, CASE WHEN t6.f3 + t6.f4 = 0 THEN t6.s_state ELSE NULL END, RANK() OVER (PARTITION BY t6.f3 + t6.f4, CASE WHEN t6.f4 = 0 THEN t6.s_state ELSE NULL END ORDER BY t6.total_sum DESC) LIMIT 100