SELECT i_category, i_class, i_brand, s_store_name, s_company_name, d_moy, sum_sales, avg_monthly_sales FROM (SELECT t2.i_category, t2.i_class, t2.i_brand, t2.s_store_name, t2.s_company_name, t2.d_moy, t2.sum_sales, (SUM(t2.sum_sales) OVER (PARTITION BY t2.i_category, t2.i_brand, t2.s_store_name, t2.s_company_name RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) / (COUNT(t2.sum_sales) OVER (PARTITION BY t2.i_category, t2.i_brand, t2.s_store_name, t2.s_company_name RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)) AS avg_monthly_sales FROM (SELECT t.i_category, t.i_class, t.i_brand, store.s_store_name, store.s_company_name, t0.d_moy, SUM(store_sales.ss_sales_price) AS sum_sales FROM (SELECT * FROM item WHERE i_category IN ('Books', 'Children', 'Electronics') AND i_class IN ('audio', 'history', 'school-uniforms') OR i_category IN ('Men', 'Shoes', 'Sports') AND i_class IN ('pants', 'tennis', 'womens')) AS t INNER JOIN store_sales ON t.i_item_sk = store_sales.ss_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2001) AS t0 ON store_sales.ss_sold_date_sk = t0.d_date_sk INNER JOIN store ON store_sales.ss_store_sk = store.s_store_sk GROUP BY t.i_category, t.i_class, t.i_brand, store.s_store_name, store.s_company_name, t0.d_moy) AS t2) AS t3 WHERE CASE WHEN avg_monthly_sales <> 0 THEN CAST(ABS(sum_sales - avg_monthly_sales) / avg_monthly_sales AS DECIMAL(19, 0)) ELSE NULL END > 0.1 ORDER BY sum_sales - avg_monthly_sales, s_store_name LIMIT 100