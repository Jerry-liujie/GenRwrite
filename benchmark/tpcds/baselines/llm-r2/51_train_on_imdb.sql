FROM (SELECT CASE WHEN t2.item_sk IS NOT NULL THEN t2.item_sk ELSE t6.item_sk END AS item_sk, CASE WHEN t2.d_date IS NOT NULL THEN t2.d_date ELSE t6.d_date END AS d_date, t2.cume_sales AS web_sales, t6.cume_sales AS store_sales, MAX(t2.cume_sales) OVER (PARTITION BY CASE WHEN t2.item_sk IS NOT NULL THEN t2.item_sk ELSE t6.item_sk END ORDER BY CASE WHEN t2.d_date IS NOT NULL THEN t2.d_date ELSE t6.d_date END ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS web_cumulative, MAX(t6.cume_sales) OVER (PARTITION BY CASE WHEN t2.item_sk IS NOT NULL THEN t2.item_sk ELSE t6.item_sk END ORDER BY CASE WHEN t2.d_date IS NOT NULL THEN t2.d_date ELSE t6.d_date END ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS store_cumulative FROM (SELECT t1.item_sk, t1.d_date, SUM(t1.f2) OVER (PARTITION BY t1.item_sk ORDER BY t1.d_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cume_sales FROM (SELECT web_sales.ws_item_sk AS item_sk, t.d_date, SUM(web_sales.ws_sales_price) AS f2 FROM web_sales INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1212 AND d_month_seq <= 1212 + 11) AS t ON web_sales.ws_sold_date_sk = t.d_date_sk GROUP BY web_sales.ws_item_sk, t.d_date) AS t1) AS t2 FULL JOIN (SELECT t5.item_sk, t5.d_date, SUM(t5.f2) OVER (PARTITION BY t5.item_sk ORDER BY t5.d_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cume_sales FROM (SELECT store_sales.ss_item_sk AS item_sk, t3.d_date, SUM(store_sales.ss_sales_price) AS f2 FROM store_sales INNER JOIN (SELECT * FROM date_dim WHERE d_month_seq >= 1212 AND d_month_seq <= 1212 + 11) AS t3 ON store_sales.ss_sold_date_sk = t3.d_date_sk GROUP BY store_sales.ss_item_sk, t3.d_date) AS t5) AS t6 ON t2.item_sk = t6.item_sk AND t2.d_date = t6.d_date) AS t7 WHERE t7.web_cumulative > t7.store_cumulative ORDER BY item_sk, d_date LIMIT 100