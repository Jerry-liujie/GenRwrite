SELECT t1.f2 / t1.f3 AS gross_margin, t1.i_category, t1.i_class, t1.f4 + t1.f5 AS lochierarchy, RANK() OVER (PARTITION BY t1.f4 + t1.f5, CASE WHEN t1.f5 = 0 THEN t1.i_category ELSE NULL END ORDER BY t1.f2 / t1.f3) AS rank_within_parent FROM (SELECT item.i_category, item.i_class, SUM(store_sales.ss_net_profit) AS f2, SUM(store_sales.ss_ext_sales_price) AS f3, GROUPING(item.i_category) AS f4, GROUPING(item.i_class) AS f5 FROM store_sales, date_dim, item, store WHERE date_dim.d_year = 2000 AND date_dim.d_date_sk = store_sales.ss_sold_date_sk AND item.i_item_sk = store_sales.ss_item_sk AND store.s_store_sk = store_sales.ss_store_sk AND store.s_state = 'TN' GROUP BY ROLLUP(item.i_class, item.i_category)) AS t1 ORDER BY t1.f4 + t1.f5 DESC, CASE WHEN t1.f4 + t1.f5 = 0 THEN t1.i_category ELSE NULL END, RANK() OVER (PARTITION BY t1.f4 + t1.f5, CASE WHEN t1.f5 = 0 THEN t1.i_category ELSE NULL END ORDER BY t1.f2 / t1.f3) LIMIT 100