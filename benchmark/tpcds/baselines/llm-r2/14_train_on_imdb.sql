SELECT channel, i_brand_id, i_class_id, i_category_id, SUM(sales), SUM(number_sales) FROM (SELECT * FROM (SELECT 'store' AS channel, t10.i_brand_id, t10.i_class_id, t10.i_category_id, t10.sales, t10.number_sales FROM (SELECT item.i_brand_id, item.i_class_id, item.i_category_id, SUM(store_sales.ss_quantity * store_sales.ss_list_price) AS sales, COUNT(*) AS number_sales FROM store_sales INNER JOIN item ON store_sales.ss_item_sk = item.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999 + 2 AND d_moy = 11) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN (SELECT item0.i_item_sk AS ss_item_sk FROM item AS item0 INNER JOIN (SELECT * FROM (SELECT item1.i_brand_id AS brand_id, item1.i_class_id AS class_id, item1.i_category_id AS category_id FROM store_sales AS store_sales0 INNER JOIN item AS item1 ON store_sales0.ss_item_sk = item1.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t0 ON store_sales0.ss_sold_date_sk = t0.d_date_sk INTERSECT SELECT item2.i_brand_id, item2.i_class_id, item2.i_category_id FROM catalog_sales INNER JOIN item AS item2 ON catalog_sales.cs_item_sk = item2.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t2 ON catalog_sales.cs_sold_date_sk = t2.d_date_sk) AS t INTERSECT SELECT item3.i_brand_id, item3.i_class_id, item3.i_category_id FROM web_sales INNER JOIN item AS item3 ON web_sales.ws_item_sk = item3.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t5 ON web_sales.ws_sold_date_sk = t5.d_date_sk) AS t7 ON item0.i_brand_id = t7.brand_id AND item0.i_class_id = t7.class_id AND item0.i_category_id = t7.category_id) AS t8 ON store_sales.ss_item_sk = t8.ss_item_sk GROUP BY item.i_brand_id, item.i_class_id, item.i_category_id) AS t10 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales1.ss_quantity AS quantity, store_sales1.ss_list_price AS list_price FROM store_sales AS store_sales1 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t11 ON store_sales1.ss_sold_date_sk = t11.d_date_sk UNION ALL SELECT catalog_sales0.cs_quantity AS quantity, catalog_sales0.cs_list_price AS list_price FROM catalog_sales AS catalog_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t13 ON catalog_sales0.cs_sold_date_sk = t13.d_date_sk) AS t UNION ALL SELECT web_sales0.ws_quantity AS quantity, web_sales0.ws_list_price AS list_price FROM web_sales AS web_sales0 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t16 ON web_sales0.ws_sold_date_sk = t16.d_date_sk) AS t18) AS t21 ON t10.sales > t21.average_sales UNION ALL SELECT 'catalog' AS channel, t34.i_brand_id, t34.i_class_id, t34.i_category_id, t34.sales, t34.number_sales FROM (SELECT item4.i_brand_id, item4.i_class_id, item4.i_category_id, SUM(catalog_sales1.cs_quantity * catalog_sales1.cs_list_price) AS sales, COUNT(*) AS number_sales FROM catalog_sales AS catalog_sales1 INNER JOIN item AS item4 ON catalog_sales1.cs_item_sk = item4.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999 + 2 AND d_moy = 11) AS t23 ON catalog_sales1.cs_sold_date_sk = t23.d_date_sk INNER JOIN (SELECT item5.i_item_sk AS ss_item_sk FROM item AS item5 INNER JOIN (SELECT * FROM (SELECT item6.i_brand_id AS brand_id, item6.i_class_id AS class_id, item6.i_category_id AS category_id FROM store_sales AS store_sales2 INNER JOIN item AS item6 ON store_sales2.ss_item_sk = item6.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t24 ON store_sales2.ss_sold_date_sk = t24.d_date_sk INTERSECT SELECT item7.i_brand_id, item7.i_class_id, item7.i_category_id FROM catalog_sales AS catalog_sales2 INNER JOIN item AS item7 ON catalog_sales2.cs_item_sk = item7.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t26 ON catalog_sales2.cs_sold_date_sk = t26.d_date_sk) AS t INTERSECT SELECT item8.i_brand_id, item8.i_class_id, item8.i_category_id FROM web_sales AS web_sales1 INNER JOIN item AS item8 ON web_sales1.ws_item_sk = item8.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t29 ON web_sales1.ws_sold_date_sk = t29.d_date_sk) AS t31 ON item5.i_brand_id = t31.brand_id AND item5.i_class_id = t31.class_id AND item5.i_category_id = t31.category_id) AS t32 ON catalog_sales1.cs_item_sk = t32.ss_item_sk GROUP BY item4.i_brand_id, item4.i_class_id, item4.i_category_id) AS t34 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales3.ss_quantity AS quantity, store_sales3.ss_list_price AS list_price FROM store_sales AS store_sales3 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t35 ON store_sales3.ss_sold_date_sk = t35.d_date_sk UNION ALL SELECT catalog_sales3.cs_quantity AS quantity, catalog_sales3.cs_list_price AS list_price FROM catalog_sales AS catalog_sales3 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t37 ON catalog_sales3.cs_sold_date_sk = t37.d_date_sk) AS t UNION ALL SELECT web_sales2.ws_quantity AS quantity, web_sales2.ws_list_price AS list_price FROM web_sales AS web_sales2 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t40 ON web_sales2.ws_sold_date_sk = t40.d_date_sk) AS t42) AS t45 ON t34.sales > t45.average_sales) AS t UNION ALL SELECT 'web' AS channel, t59.i_brand_id, t59.i_class_id, t59.i_category_id, t59.sales, t59.number_sales FROM (SELECT item9.i_brand_id, item9.i_class_id, item9.i_category_id, SUM(web_sales3.ws_quantity * web_sales3.ws_list_price) AS sales, COUNT(*) AS number_sales FROM web_sales AS web_sales3 INNER JOIN item AS item9 ON web_sales3.ws_item_sk = item9.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year = 1999 + 2 AND d_moy = 11) AS t48 ON web_sales3.ws_sold_date_sk = t48.d_date_sk INNER JOIN (SELECT item10.i_item_sk AS ss_item_sk FROM item AS item10 INNER JOIN (SELECT * FROM (SELECT item11.i_brand_id AS brand_id, item11.i_class_id AS class_id, item11.i_category_id AS category_id FROM store_sales AS store_sales4 INNER JOIN item AS item11 ON store_sales4.ss_item_sk = item11.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t49 ON store_sales4.ss_sold_date_sk = t49.d_date_sk INTERSECT SELECT item12.i_brand_id, item12.i_class_id, item12.i_category_id FROM catalog_sales AS catalog_sales4 INNER JOIN item AS item12 ON catalog_sales4.cs_item_sk = item12.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t51 ON catalog_sales4.cs_sold_date_sk = t51.d_date_sk) AS t INTERSECT SELECT item13.i_brand_id, item13.i_class_id, item13.i_category_id FROM web_sales AS web_sales4 INNER JOIN item AS item13 ON web_sales4.ws_item_sk = item13.i_item_sk INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t54 ON web_sales4.ws_sold_date_sk = t54.d_date_sk) AS t56 ON item10.i_brand_id = t56.brand_id AND item10.i_class_id = t56.class_id AND item10.i_category_id = t56.category_id) AS t57 ON web_sales3.ws_item_sk = t57.ss_item_sk GROUP BY item9.i_brand_id, item9.i_class_id, item9.i_category_id) AS t59 INNER JOIN (SELECT AVG(quantity * list_price) AS average_sales FROM (SELECT * FROM (SELECT store_sales5.ss_quantity AS quantity, store_sales5.ss_list_price AS list_price FROM store_sales AS store_sales5 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t60 ON store_sales5.ss_sold_date_sk = t60.d_date_sk UNION ALL SELECT catalog_sales5.cs_quantity AS quantity, catalog_sales5.cs_list_price AS list_price FROM catalog_sales AS catalog_sales5 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t62 ON catalog_sales5.cs_sold_date_sk = t62.d_date_sk) AS t UNION ALL SELECT web_sales5.ws_quantity AS quantity, web_sales5.ws_list_price AS list_price FROM web_sales AS web_sales5 INNER JOIN (SELECT * FROM date_dim WHERE d_year >= 1999 AND d_year <= 1999 + 2) AS t65 ON web_sales5.ws_sold_date_sk = t65.d_date_sk) AS t67) AS t70 ON t59.sales > t70.average_sales) AS t72 GROUP BY ROLLUP(channel, i_brand_id, i_class_id, i_category_id) ORDER BY channel, i_brand_id, i_class_id, i_category_id LIMIT 100