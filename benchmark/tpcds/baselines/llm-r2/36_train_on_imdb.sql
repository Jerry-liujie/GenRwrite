SELECT t2.f2 / t2.f3 AS gross_margin, t2.i_category, t2.i_class, t2.f4 + t2.f5 AS lochierarchy, RANK() OVER (PARTITION BY t2.f4 + t2.f5, CASE WHEN t2.f5 = 0 THEN t2.i_category ELSE NULL END ORDER BY t2.f2 / t2.f3) AS rank_within_parent FROM (SELECT item.i_category, item.i_class, SUM(store_sales.ss_net_profit) AS f2, SUM(store_sales.ss_ext_sales_price) AS f3, GROUPING(item.i_category) AS f4, GROUPING(item.i_class) AS f5 FROM store_sales INNER JOIN (SELECT * FROM date_dim WHERE d_year = 2000) AS t ON store_sales.ss_sold_date_sk = t.d_date_sk INNER JOIN item ON store_sales.ss_item_sk = item.i_item_sk INNER JOIN (SELECT * FROM store WHERE s_state = 'TN') AS t0 ON store_sales.ss_store_sk = t0.s_store_sk GROUP BY ROLLUP(item.i_class, item.i_category)) AS t2 ORDER BY t2.f4 + t2.f5 DESC, CASE WHEN t2.f4 + t2.f5 = 0 THEN t2.i_category ELSE NULL END, RANK() OVER (PARTITION BY t2.f4 + t2.f5, CASE WHEN t2.f5 = 0 THEN t2.i_category ELSE NULL END ORDER BY t2.f2 / t2.f3) LIMIT 100